openapi: 3.0.1
info:
  title: eShopOnDapr-Basket-Api
  description: ''
  version: '1.0'
servers:
  - url: http://jm-apim-apiops.azure-api.net/apis/b
  - url: https://jm-apim-apiops.azure-api.net/apis/b
paths:
  /api/v1/Basket:
    get:
      tags:
        - Basket
      summary: /api/v1/Basket - GET
      operationId: get-api-v1-basket
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              example:
                buyerId: string
                items:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    quantity: 0
                    pictureFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              example:
                buyerId: string
                items:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    quantity: 0
                    pictureFileName: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - Basket
      summary: /api/v1/Basket - POST
      operationId: post-api-v1-basket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBasket'
            example:
              buyerId: string
              items:
                - productId: 0
                  productName: string
                  unitPrice: 0
                  quantity: 0
                  pictureFileName: string
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerBasket'
            example:
              buyerId: string
              items:
                - productId: 0
                  productName: string
                  unitPrice: 0
                  quantity: 0
                  pictureFileName: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerBasket'
            example:
              buyerId: string
              items:
                - productId: 0
                  productName: string
                  unitPrice: 0
                  quantity: 0
                  pictureFileName: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              example:
                buyerId: string
                items:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    quantity: 0
                    pictureFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerBasket'
              example:
                buyerId: string
                items:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    quantity: 0
                    pictureFileName: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    delete:
      tags:
        - Basket
      summary: /api/v1/Basket - DELETE
      operationId: delete-api-v1-basket
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/Basket/checkout:
    post:
      tags:
        - Basket
      summary: /api/v1/Basket/checkout - POST
      operationId: post-api-v1-basket-checkout
      parameters:
        - name: X-Request-Id
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasketCheckout'
            example:
              userEmail: string
              city: string
              street: string
              state: string
              country: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityCode: string
          text/json:
            schema:
              $ref: '#/components/schemas/BasketCheckout'
            example:
              userEmail: string
              city: string
              street: string
              state: string
              country: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityCode: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/BasketCheckout'
            example:
              userEmail: string
              city: string
              street: string
              state: string
              country: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityCode: string
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/IntegrationEvent/OrderStatusChangedToSubmitted:
    post:
      tags:
        - IntegrationEvent
      summary: /api/v1/IntegrationEvent/OrderStatusChangedToSubmitted - POST
      operationId: post-api-v1-integrationevent-orderstatuschangedtosubmitted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToSubmittedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              buyerId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToSubmittedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              buyerId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToSubmittedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              buyerId: string
      responses:
        '200':
          description: Success
components:
  schemas:
    BasketCheckout:
      type: object
      properties:
        userEmail:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        cardNumber:
          type: string
          nullable: true
        cardHolderName:
          type: string
          nullable: true
        cardExpiration:
          type: string
          format: date-time
        cardSecurityCode:
          type: string
          nullable: true
      additionalProperties: false
    BasketItem:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        pictureFileName:
          type: string
          nullable: true
      additionalProperties: false
    CustomerBasket:
      type: object
      properties:
        buyerId:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
          nullable: true
      additionalProperties: false
    OrderStatusChangedToSubmittedIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStatus:
          type: string
          nullable: true
        buyerId:
          type: string
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]