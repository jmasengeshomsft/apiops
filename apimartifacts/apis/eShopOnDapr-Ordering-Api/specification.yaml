openapi: 3.0.1
info:
  title: eShopOnDapr-Ordering-Api
  description: ''
  version: '1.0'
servers:
  - url: https://jm-apim-apiops.azure-api.net/apis/o
paths:
  /api/v1/OrderingProcessEvent/UserCheckoutAccepted:
    post:
      tags:
        - OrderingProcessEvent
      summary: /api/v1/OrderingProcessEvent/UserCheckoutAccepted - POST
      description: /api/v1/OrderingProcessEvent/UserCheckoutAccepted - POST
      operationId: post-api-v1-orderingprocessevent-usercheckoutaccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCheckoutAcceptedIntegrationEvent'
            example:
              id: string
              creationDate: string
              userId: string
              userEmail: string
              city: string
              street: string
              state: string
              country: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityNumber: string
              requestId: string
              basket:
                buyerId: string
                items:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    quantity: 0
                    pictureFileName: string
          text/json:
            schema:
              $ref: '#/components/schemas/UserCheckoutAcceptedIntegrationEvent'
            example:
              id: string
              creationDate: string
              userId: string
              userEmail: string
              city: string
              street: string
              state: string
              country: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityNumber: string
              requestId: string
              basket:
                buyerId: string
                items:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    quantity: 0
                    pictureFileName: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserCheckoutAcceptedIntegrationEvent'
            example:
              id: string
              creationDate: string
              userId: string
              userEmail: string
              city: string
              street: string
              state: string
              country: string
              cardNumber: string
              cardHolderName: string
              cardExpiration: string
              cardSecurityNumber: string
              requestId: string
              basket:
                buyerId: string
                items:
                  - productId: 0
                    productName: string
                    unitPrice: 0
                    quantity: 0
                    pictureFileName: string
      responses:
        '200':
          description: Success
  /api/v1/OrderingProcessEvent/OrderStockConfirmed:
    post:
      tags:
        - OrderingProcessEvent
      summary: /api/v1/OrderingProcessEvent/OrderStockConfirmed - POST
      description: /api/v1/OrderingProcessEvent/OrderStockConfirmed - POST
      operationId: post-api-v1-orderingprocessevent-orderstockconfirmed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStockConfirmedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStockConfirmedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStockConfirmedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
      responses:
        '200':
          description: Success
  /api/v1/OrderingProcessEvent/OrderStockRejected:
    post:
      tags:
        - OrderingProcessEvent
      summary: /api/v1/OrderingProcessEvent/OrderStockRejected - POST
      description: /api/v1/OrderingProcessEvent/OrderStockRejected - POST
      operationId: post-api-v1-orderingprocessevent-orderstockrejected
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStockRejectedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStockItems:
                - productId: 0
                  hasStock: true
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStockRejectedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStockItems:
                - productId: 0
                  hasStock: true
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStockRejectedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStockItems:
                - productId: 0
                  hasStock: true
      responses:
        '200':
          description: Success
  /api/v1/OrderingProcessEvent/OrderPaymentSucceeded:
    post:
      tags:
        - OrderingProcessEvent
      summary: /api/v1/OrderingProcessEvent/OrderPaymentSucceeded - POST
      description: /api/v1/OrderingProcessEvent/OrderPaymentSucceeded - POST
      operationId: post-api-v1-orderingprocessevent-orderpaymentsucceeded
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentSucceededIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentSucceededIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderPaymentSucceededIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
      responses:
        '200':
          description: Success
  /api/v1/OrderingProcessEvent/OrderPaymentFailed:
    post:
      tags:
        - OrderingProcessEvent
      summary: /api/v1/OrderingProcessEvent/OrderPaymentFailed - POST
      description: /api/v1/OrderingProcessEvent/OrderPaymentFailed - POST
      operationId: post-api-v1-orderingprocessevent-orderpaymentfailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentFailedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentFailedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderPaymentFailedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
      responses:
        '200':
          description: Success
  '/api/v1/Orders/{orderNumber}/cancel':
    put:
      tags:
        - Orders
      summary: '/api/v1/Orders/{orderNumber}/cancel - PUT'
      description: '/api/v1/Orders/{orderNumber}/cancel - PUT'
      operationId: put-api-v1-orders-ordernumber-cancel
      parameters:
        - name: orderNumber
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/api/v1/Orders/{orderNumber}/ship':
    put:
      tags:
        - Orders
      summary: '/api/v1/Orders/{orderNumber}/ship - PUT'
      description: '/api/v1/Orders/{orderNumber}/ship - PUT'
      operationId: put-api-v1-orders-ordernumber-ship
      parameters:
        - name: orderNumber
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
        - name: x-requestid
          in: header
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/api/v1/Orders/{orderNumber}':
    get:
      tags:
        - Orders
      summary: '/api/v1/Orders/{orderNumber} - GET'
      description: '/api/v1/Orders/{orderNumber} - GET'
      operationId: get-api-v1-orders-ordernumber
      parameters:
        - name: orderNumber
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Order'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              example:
                id: string
                orderNumber: 0
                orderDate: string
                orderStatus: string
                description: string
                address:
                  street: string
                  city: string
                  state: string
                  country: string
                buyerId: string
                buyerEmail: string
                orderItems:
                  - id: 0
                    orderId: string
                    productId: 0
                    productName: string
                    unitPrice: 0
                    units: 0
                    pictureFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/Order'
              example:
                id: string
                orderNumber: 0
                orderDate: string
                orderStatus: string
                description: string
                address:
                  street: string
                  city: string
                  state: string
                  country: string
                buyerId: string
                buyerEmail: string
                orderItems:
                  - id: 0
                    orderId: string
                    productId: 0
                    productName: string
                    unitPrice: 0
                    units: 0
                    pictureFileName: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example: ''
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  /api/v1/Orders:
    get:
      tags:
        - Orders
      summary: /api/v1/Orders - GET
      description: /api/v1/Orders - GET
      operationId: get-api-v1-orders
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSummary'
              example: ''
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSummary'
              example:
                - id: string
                  orderNumber: 0
                  orderDate: string
                  orderStatus: string
                  total: 0
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSummary'
              example:
                - id: string
                  orderNumber: 0
                  orderDate: string
                  orderStatus: string
                  total: 0
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToSubmitted:
    post:
      tags:
        - UpdateOrderStatusEvent
      summary: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToSubmitted - POST
      description: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToSubmitted - POST
      operationId: post-api-v1-updateorderstatusevent-orderstatuschangedtosubmitted
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToSubmittedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              buyerId: string
              buyerEmail: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToSubmittedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              buyerId: string
              buyerEmail: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToSubmittedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              buyerId: string
              buyerEmail: string
      responses:
        '200':
          description: Success
  /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToAwaitingStockValidation:
    post:
      tags:
        - UpdateOrderStatusEvent
      summary: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToAwaitingStockValidation - POST
      description: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToAwaitingStockValidation - POST
      operationId: post-api-v1-updateorderstatusevent-orderstatuschangedtoawaitingstockvalidati
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToAwaitingStockValidationIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              orderStockItems:
                - productId: 0
                  units: 0
              buyerId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToAwaitingStockValidationIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              orderStockItems:
                - productId: 0
                  units: 0
              buyerId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToAwaitingStockValidationIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              orderStockItems:
                - productId: 0
                  units: 0
              buyerId: string
      responses:
        '200':
          description: Success
  /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToValidated:
    post:
      tags:
        - UpdateOrderStatusEvent
      summary: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToValidated - POST
      description: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToValidated - POST
      operationId: post-api-v1-updateorderstatusevent-orderstatuschangedtovalidated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToValidatedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              total: 0
              buyerId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToValidatedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              total: 0
              buyerId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToValidatedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              total: 0
              buyerId: string
      responses:
        '200':
          description: Success
  /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToPaid:
    post:
      tags:
        - UpdateOrderStatusEvent
      summary: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToPaid - POST
      description: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToPaid - POST
      operationId: post-api-v1-updateorderstatusevent-orderstatuschangedtopaid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToPaidIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              orderStockItems:
                - productId: 0
                  units: 0
              buyerId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToPaidIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              orderStockItems:
                - productId: 0
                  units: 0
              buyerId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToPaidIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              orderStockItems:
                - productId: 0
                  units: 0
              buyerId: string
      responses:
        '200':
          description: Success
  /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToShipped:
    post:
      tags:
        - UpdateOrderStatusEvent
      summary: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToShipped - POST
      description: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToShipped - POST
      operationId: post-api-v1-updateorderstatusevent-orderstatuschangedtoshipped
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToShippedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              buyerId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToShippedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              buyerId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToShippedIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              buyerId: string
      responses:
        '200':
          description: Success
  /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToCancelled:
    post:
      tags:
        - UpdateOrderStatusEvent
      summary: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToCancelled - POST
      description: /api/v1/UpdateOrderStatusEvent/OrderStatusChangedToCancelled - POST
      operationId: post-api-v1-updateorderstatusevent-orderstatuschangedtocancelled
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToCancelledIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              buyerId: string
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToCancelledIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              buyerId: string
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToCancelledIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStatus: string
              description: string
              buyerId: string
      responses:
        '200':
          description: Success
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
          nullable: true
          readOnly: true
        city:
          type: string
          nullable: true
          readOnly: true
        state:
          type: string
          nullable: true
          readOnly: true
        country:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    BasketItem:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        pictureFileName:
          type: string
          nullable: true
      additionalProperties: false
    ConfirmedOrderStockItem:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        hasStock:
          type: boolean
      additionalProperties: false
    CustomerBasket:
      type: object
      properties:
        buyerId:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/BasketItem'
          nullable: true
      additionalProperties: false
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        orderNumber:
          type: integer
          format: int32
          readOnly: true
        orderDate:
          type: string
          format: date-time
          readOnly: true
        orderStatus:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        buyerId:
          type: string
          nullable: true
          readOnly: true
        buyerEmail:
          type: string
          nullable: true
          readOnly: true
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          nullable: true
          readOnly: true
      additionalProperties: false
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        orderId:
          type: string
          format: uuid
        productId:
          type: integer
          format: int32
        productName:
          type: string
          nullable: true
        unitPrice:
          type: number
          format: double
        units:
          type: integer
          format: int32
        pictureFileName:
          type: string
          nullable: true
      additionalProperties: false
    OrderPaymentFailedIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
      additionalProperties: false
    OrderPaymentSucceededIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
      additionalProperties: false
    OrderStatusChangedToAwaitingStockValidationIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStatus:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        orderStockItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderStockItem'
          nullable: true
        buyerId:
          type: string
          nullable: true
      additionalProperties: false
    OrderStatusChangedToCancelledIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStatus:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        buyerId:
          type: string
          nullable: true
      additionalProperties: false
    OrderStatusChangedToPaidIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStatus:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        orderStockItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderStockItem'
          nullable: true
        buyerId:
          type: string
          nullable: true
      additionalProperties: false
    OrderStatusChangedToShippedIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStatus:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        buyerId:
          type: string
          nullable: true
      additionalProperties: false
    OrderStatusChangedToSubmittedIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStatus:
          type: string
          nullable: true
        buyerId:
          type: string
          nullable: true
        buyerEmail:
          type: string
          nullable: true
      additionalProperties: false
    OrderStatusChangedToValidatedIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStatus:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        total:
          type: number
          format: double
        buyerId:
          type: string
          nullable: true
      additionalProperties: false
    OrderStockConfirmedIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
      additionalProperties: false
    OrderStockItem:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        units:
          type: integer
          format: int32
      additionalProperties: false
    OrderStockRejectedIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStockItems:
          type: array
          items:
            $ref: '#/components/schemas/ConfirmedOrderStockItem'
          nullable: true
      additionalProperties: false
    OrderSummary:
      type: object
      properties:
        id:
          type: string
          format: uuid
        orderNumber:
          type: integer
          format: int32
        orderDate:
          type: string
          format: date-time
        orderStatus:
          type: string
          nullable: true
        total:
          type: number
          format: double
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    UserCheckoutAcceptedIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        userId:
          type: string
          nullable: true
        userEmail:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        cardNumber:
          type: string
          nullable: true
        cardHolderName:
          type: string
          nullable: true
        cardExpiration:
          type: string
          format: date-time
        cardSecurityNumber:
          type: string
          nullable: true
        requestId:
          type: string
          format: uuid
        basket:
          $ref: '#/components/schemas/CustomerBasket'
      additionalProperties: false
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]