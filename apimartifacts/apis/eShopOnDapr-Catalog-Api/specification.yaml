openapi: 3.0.1
info:
  title: eShopOnDapr-Catalog-Api
  description: ''
  version: '1.0'
servers:
  - url: http://jm-apim-apiops.azure-api.net/apis/c
  - url: https://jm-apim-apiops.azure-api.net/apis/c
paths:
  /api/v1/Catalog/brands:
    get:
      tags:
        - Catalog
      summary: /api/v1/Catalog/brands - GET
      operationId: get-api-v1-catalog-brands
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBrand'
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBrand'
              example:
                - id: 0
                  name: string
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogBrand'
              example:
                - id: 0
                  name: string
  /api/v1/Catalog/types:
    get:
      tags:
        - Catalog
      summary: /api/v1/Catalog/types - GET
      operationId: get-api-v1-catalog-types
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogType'
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogType'
              example:
                - id: 0
                  name: string
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogType'
              example:
                - id: 0
                  name: string
  /api/v1/Catalog/items/by_ids:
    get:
      tags:
        - Catalog
      summary: /api/v1/Catalog/items/by_ids - GET
      operationId: get-api-v1-catalog-items-by_ids
      parameters:
        - name: ids
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogItem'
              examples:
                default:
                  value: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogItem'
              example:
                - id: 0
                  name: string
                  price: 0
                  pictureFileName: string
                  catalogTypeId: 0
                  catalogType:
                    id: 0
                    name: string
                  catalogBrandId: 0
                  catalogBrand:
                    id: 0
                    name: string
                  availableStock: 0
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CatalogItem'
              example:
                - id: 0
                  name: string
                  price: 0
                  pictureFileName: string
                  catalogTypeId: 0
                  catalogType:
                    id: 0
                    name: string
                  catalogBrandId: 0
                  catalogBrand:
                    id: 0
                    name: string
                  availableStock: 0
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
  /api/v1/Catalog/items/by_page:
    get:
      tags:
        - Catalog
      summary: /api/v1/Catalog/items/by_page - GET
      operationId: get-api-v1-catalog-items-by_page
      parameters:
        - name: typeId
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: -1
        - name: brandId
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: -1
        - name: pageSize
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 10
        - name: pageIndex
          in: query
          description: Format - int32.
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PaginatedItemsViewModel'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemsViewModel'
              example:
                pageIndex: 0
                pageSize: 0
                count: 0
                items:
                  - id: 0
                    name: string
                    price: 0
                    pictureFileName: string
            text/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemsViewModel'
              example:
                pageIndex: 0
                pageSize: 0
                count: 0
                items:
                  - id: 0
                    name: string
                    price: 0
                    pictureFileName: string
  /api/v1/IntegrationEvent/OrderStatusChangedToAwaitingStockValidation:
    post:
      tags:
        - IntegrationEvent
      summary: /api/v1/IntegrationEvent/OrderStatusChangedToAwaitingStockValidation - POST
      operationId: post-api-v1-integrationevent-orderstatuschangedtoawaitingstockvalidation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToAwaitingStockValidationIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStockItems:
                - productId: 0
                  units: 0
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToAwaitingStockValidationIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStockItems:
                - productId: 0
                  units: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToAwaitingStockValidationIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: string
              orderStockItems:
                - productId: 0
                  units: 0
      responses:
        '200':
          description: Success
  /api/v1/IntegrationEvent/OrderStatusChangedToPaid:
    post:
      tags:
        - IntegrationEvent
      summary: /api/v1/IntegrationEvent/OrderStatusChangedToPaid - POST
      operationId: post-api-v1-integrationevent-orderstatuschangedtopaid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToPaidIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: 0
              orderStockItems:
                - productId: 0
                  units: 0
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToPaidIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: 0
              orderStockItems:
                - productId: 0
                  units: 0
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangedToPaidIntegrationEvent'
            example:
              id: string
              creationDate: string
              orderId: 0
              orderStockItems:
                - productId: 0
                  units: 0
      responses:
        '200':
          description: Success
  '/api/v1/catalog/items/{catalogItemId}/pic':
    get:
      tags:
        - Pic
      summary: '/api/v1/catalog/items/{catalogItemId}/pic - GET'
      operationId: get-api-v1-catalog-items-catalogitemid-pic
      parameters:
        - name: catalogItemId
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                default:
                  value: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              example:
                type: string
                title: string
                status: 0
                detail: string
                instance: string
components:
  schemas:
    CatalogBrand:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    CatalogItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        price:
          type: number
          format: double
        pictureFileName:
          type: string
          nullable: true
        catalogTypeId:
          type: integer
          format: int32
        catalogType:
          $ref: '#/components/schemas/CatalogType'
        catalogBrandId:
          type: integer
          format: int32
        catalogBrand:
          $ref: '#/components/schemas/CatalogBrand'
        availableStock:
          type: integer
          format: int32
      additionalProperties: false
    CatalogType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    ItemViewModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        price:
          type: number
          format: double
        pictureFileName:
          type: string
          nullable: true
      additionalProperties: false
    OrderStatusChangedToAwaitingStockValidationIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: string
          format: uuid
        orderStockItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderStockItem'
          nullable: true
      additionalProperties: false
    OrderStatusChangedToPaidIntegrationEvent:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        creationDate:
          type: string
          format: date-time
          readOnly: true
        orderId:
          type: integer
          format: int32
        orderStockItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderStockItem'
          nullable: true
      additionalProperties: false
    OrderStockItem:
      type: object
      properties:
        productId:
          type: integer
          format: int32
        units:
          type: integer
          format: int32
      additionalProperties: false
    PaginatedItemsViewModel:
      type: object
      properties:
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        count:
          type: integer
          format: int64
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemViewModel'
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]